import numpy as np


def re_organize(x, reference):
    for val in x:
        if val not in reference:
            x_val_not_in_ref = val
    tmp = []
    for id_val, ref_val in enumerate(reference):
        tmp.append(ref_val if ref_val in x else x_val_not_in_ref)
    return tmp


oriented_truth = [0, 1, 36]
# oriented_truth = [36, 1, 0]
triangles = [oriented_truth, [1, 36, 48], [1, 2, 48], [2, 3, 48], [3, 4, 48], [4, 48, 60], [4, 5, 60], [5, 59, 60],
                     [5, 6, 59], [6, 58, 59], [6, 7, 58], [7, 57, 58], [7, 8, 57], [8, 9, 57], [9, 56, 57], [9, 10, 56],
                     [10, 55, 56], [10, 11, 55], [11, 64, 55], [11, 12, 64], [12, 54, 64], [12, 13, 54], [13, 14, 54],
                     [14, 15, 54], [15, 45, 54], [15, 16, 45], [16, 26, 45], [26, 25, 45], [25, 44, 45], [25, 24, 44],
                     [24, 43, 44], [23, 24, 43], [23, 42, 43], [22, 23, 42], [21, 22, 23], [20, 21, 23], [20, 21, 39],
                     [20, 38, 39], [19, 20, 38], [19, 37, 38], [18, 19, 37], [18, 36, 37], [17, 18, 36], [0, 17, 36],
                     [36, 37, 41], [36, 40, 41], [40, 37, 38], [38, 39, 40], [42, 43, 47], [43, 44, 47], [44, 46, 47],
                     [44, 45, 46], [21, 27, 39], [27, 28, 39], [28, 29, 39], [29, 31, 39], [39, 40, 31], [40, 41, 31],
                     [31, 36, 41], [31, 36, 48], [21, 22, 27], [22, 27, 42], [27, 28, 42], [28, 29, 42], [29, 35, 42],
                     [35, 42, 47], [35, 46, 47], [35, 45, 46], [35, 45, 54], [29, 30, 31], [30, 31, 32], [30, 32, 33],
                     [30, 33, 34], [30, 34, 35], [29, 30, 35], [31, 48, 49], [31, 49, 50], [31, 32, 50], [32, 33, 50],
                     [33, 50, 51], [33, 51, 52], [33, 34, 52], [34, 35, 52], [35, 52, 53], [35, 53, 54], [48, 49, 60],
                     [49, 50, 61], [50, 51, 61], [51, 61, 62], [51, 62, 63], [51, 52, 63], [52, 53, 63], [53, 54, 64],
                     [49, 59, 60], [49, 59, 61], [49, 61, 67], [61, 62, 67], [62, 66, 67], [62, 65, 66], [62, 63, 65],
                     [55, 63, 65], [53, 55, 65], [53, 55, 64], [58, 59, 67], [58, 66, 67], [57, 58, 66], [56, 57, 66],
                     [56, 65, 66], [55, 56, 65]]
x = np.asarray([[114.12003992, 63.83270698, 3.58695353],
                [114.48040202, 68.38996253, 3.93282379],
                [115.19907319, 72.52683657, 4.20883578],
                [115.95539439, 76.28304807, 4.99296568],
                [117.25668079, 80.28227679, 7.05638098],
                [119.81154816, 83.4210422, 10.68246326],
                [122.9506121, 85.24490531, 15.08055382],
                [126.90661692, 86.66925466, 19.0765272],
                [132.18942735, 87.53668167, 20.44077693],
                [137.25137261, 86.64523443, 18.33809211],
                [140.61087015, 85.30877388, 13.82679714],
                [143.19734197, 83.56462901, 9.0581321],
                [145.2965874, 80.48196851, 5.09171555],
                [146.38808493, 76.4887813, 2.87252004],
                [147.09649528, 72.73195266, 1.90577641],
                [147.74007784, 68.62969242, 1.49797263],
                [148.1083771, 64.05989291, 1.1270397],
                [119.7553164, 59.53975369, 17.75198739],
                [121.28743525, 58.22611886, 20.26226167],
                [123.6981897, 57.42147524, 22.64260029],
                [126.74961623, 57.60106972, 23.58022364],
                [129.60456968, 59.06990855, 24.00150179],
                [135.49832298, 59.05947689, 23.0996418],
                [138.04190383, 58.02231744, 22.3320304],
                [140.40347404, 57.58075186, 20.98109698],
                [143.17940498, 58.08596684, 18.93221493],
                [145.10608153, 59.32745874, 16.21156844],
                [131.98916031, 62.30229546, 25.18417856],
                [132.11161571, 64.82458579, 25.77390246],
                [132.12820374, 67.11349677, 26.43957646],
                [131.87526993, 69.90711926, 26.94808294],
                [128.07590142, 72.11303342, 23.6666957],
                [129.91008407, 72.06496555, 24.51774583],
                [132.01142225, 72.32328248, 24.19446736],
                [133.87097795, 72.09717806, 24.25986659],
                [136.02282307, 72.22970597, 23.14627629],
                [120.62077581, 63.32143422, 18.87307924],
                [123.652894, 63.46627791, 22.45095507],
                [126.94431692, 63.65844391, 23.09656407],
                [129.49818579, 63.82126219, 22.22702708],
                [127.00527228, 64.49119749, 22.92668834],
                [124.01409377, 64.41402531, 21.71996282],
                [134.64456804, 64.0810441, 21.3141471],
                [137.2954676, 63.94820391, 21.45243755],
                [141.26214204, 63.92083119, 19.71878326],
                [144.21536386, 63.95835689, 16.93243874],
                [141.19240448, 64.71184103, 20.25399595],
                [137.35854949, 64.8139877, 21.32679787],
                [127.35286913, 76.59467619, 21.66867343],
                [128.72171947, 75.72143337, 23.2830373],
                [130.8526436, 74.34987073, 24.81585256],
                [132.55787356, 74.73604869, 24.87886163],
                [134.22230017, 74.40237669, 24.60499884],
                [136.1394416, 75.7067595, 23.39248256],
                [137.09905145, 76.77052368, 20.99379581],
                [136.12842763, 77.70090558, 22.83002489],
                [134.46730109, 77.97870014, 23.99682015],
                [132.62980335, 78.09590749, 24.36923139],
                [130.58638186, 77.99411885, 24.3017503],
                [129.06415498, 77.64381021, 23.2818908],
                [127.42890519, 76.59073971, 21.63260301],
                [130.73041958, 76.36136552, 23.78435562],
                [132.67637087, 76.49166988, 24.08207403],
                [134.32405058, 76.41479034, 23.54895208],
                [137.02270094, 76.72767873, 20.94149886],
                [134.38225563, 76.50580299, 23.6855208],
                [132.64641856, 76.57448233, 24.02497999],
                [130.83233656, 76.42657605, 23.90125147]])

# for id in range(len(triangles)):
#     for ref_triangle in triangles[:id]:
#         if len(set(triangles[id]) & set(ref_triangle)) == 2:
#             triangles[id] = re_organize(triangles[id], ref_triangle)
#             break
#     for id_target, target_triangle in enumerate(triangles[id:]):
#         if len(set(triangles[id]) & set(target_triangle)) == 2:
#             triangles[id + id_target] = re_organize(target_triangle, triangles[id])

for id in range(len(triangles)):
    pt0, pt1, pt2 = triangles[id]
    norm = np.cross(x[pt1] - x[pt0], x[pt2] - x[pt0])
    angle = 180 * np.arccos(norm[-1] / np.linalg.norm(norm)) / np.pi
    if angle < 90:
        triangles[id] = [pt0, pt2, pt1]



print(triangles)
val1 = [[0, 1, 36], [48, 1, 36], [48, 1, 2], [48, 3, 2], [48, 3, 4], [48, 60, 4], [5, 60, 4], [5, 60, 59], [5, 6, 59],
        [58, 6, 59], [58, 6, 7], [58, 57, 7], [8, 57, 7], [8, 57, 9], [56, 57, 9], [56, 10, 9], [56, 10, 55],
        [11, 10, 55], [11, 64, 55], [11, 64, 12], [54, 64, 12], [54, 13, 12], [54, 13, 14], [54, 15, 14], [54, 15, 45],
        [16, 15, 45], [16, 26, 45], [25, 26, 45], [25, 44, 45], [25, 44, 24], [43, 44, 24], [43, 23, 24], [43, 23, 42],
        [22, 23, 42], [22, 23, 21], [20, 23, 21], [20, 39, 21], [20, 39, 38], [20, 19, 38], [37, 19, 38], [37, 19, 18],
        [37, 36, 18], [17, 36, 18], [0, 17, 36], [37, 36, 41], [40, 36, 41], [37, 40, 38], [40, 39, 38], [43, 47, 42],
        [43, 44, 47], [46, 44, 47], [46, 44, 45], [27, 39, 21], [27, 39, 28], [29, 39, 28], [29, 39, 31], [40, 39, 31],
        [40, 31, 41], [31, 36, 41], [48, 31, 36], [22, 27, 21], [22, 27, 42], [27, 42, 28], [29, 42, 28], [29, 42, 35],
        [35, 47, 42], [46, 35, 47], [46, 35, 45], [54, 35, 45], [29, 30, 31], [32, 30, 31], [32, 30, 33], [34, 30, 33],
        [34, 30, 35], [29, 30, 35], [48, 31, 49], [50, 31, 49], [32, 50, 31], [32, 50, 33], [51, 50, 33], [51, 52, 33],
        [34, 52, 33], [34, 52, 35], [53, 52, 35], [54, 35, 53], [48, 60, 49], [50, 61, 49], [51, 50, 61], [51, 62, 61],
        [51, 62, 63], [51, 52, 63], [53, 52, 63], [54, 64, 53], [49, 60, 59], [59, 61, 49], [67, 61, 49], [67, 62, 61],
        [67, 62, 66], [65, 62, 66], [65, 62, 63], [65, 55, 63], [65, 55, 53], [53, 64, 55], [58, 67, 59], [67, 58, 66],
        [58, 57, 66], [56, 57, 66], [65, 56, 66], [56, 65, 55]]
val2 = [[36, 1, 0], [36, 1, 48], [2, 1, 48], [2, 3, 48], [4, 3, 48], [4, 60, 48], [4, 60, 5], [59, 60, 5], [59, 6, 5],
        [59, 6, 58], [7, 6, 58], [7, 57, 58], [7, 57, 8], [9, 57, 8], [9, 57, 56], [9, 10, 56], [55, 10, 56],
        [55, 10, 11], [55, 64, 11], [12, 64, 11], [12, 64, 54], [12, 13, 54], [14, 13, 54], [14, 15, 54], [45, 15, 54],
        [45, 15, 16], [45, 26, 16], [45, 26, 25], [45, 44, 25], [24, 44, 25], [24, 44, 43], [24, 23, 43], [42, 23, 43],
        [42, 23, 22], [21, 23, 22], [21, 23, 20], [21, 39, 20], [38, 39, 20], [38, 19, 20], [38, 19, 37], [18, 19, 37],
        [18, 36, 37], [18, 36, 17], [36, 17, 0], [41, 36, 37], [41, 36, 40], [38, 40, 37], [38, 39, 40], [42, 47, 43],
        [47, 44, 43], [47, 44, 46], [45, 44, 46], [21, 39, 27], [28, 39, 27], [28, 39, 29], [31, 39, 29], [31, 39, 40],
        [41, 31, 40], [41, 36, 31], [36, 31, 48], [21, 27, 22], [42, 27, 22], [28, 42, 27], [28, 42, 29], [35, 42, 29],
        [42, 47, 35], [47, 35, 46], [45, 35, 46], [45, 35, 54], [31, 30, 29], [31, 30, 32], [33, 30, 32], [33, 30, 34],
        [35, 30, 34], [35, 30, 29], [49, 31, 48], [49, 31, 50], [31, 50, 32], [33, 50, 32], [33, 50, 51], [33, 52, 51],
        [33, 52, 34], [35, 52, 34], [35, 52, 53], [53, 35, 54], [49, 60, 48], [49, 61, 50], [61, 50, 51], [61, 62, 51],
        [63, 62, 51], [63, 52, 51], [63, 52, 53], [53, 64, 54], [59, 60, 49], [49, 61, 59], [49, 61, 67], [61, 62, 67],
        [66, 62, 67], [66, 62, 65], [63, 62, 65], [63, 55, 65], [53, 55, 65], [55, 64, 53], [59, 67, 58], [66, 58, 67],
        [66, 57, 58], [66, 57, 56], [66, 56, 65], [55, 65, 56]]
